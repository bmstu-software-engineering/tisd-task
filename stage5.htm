<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=Generator content="Microsoft Word 11 (filtered)">
<title>Лабораторная работа № 1</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"Comic Sans MS";
	panose-1:3 15 7 2 3 3 2 2 2 4;}
@font-face
	{font-family:"\@Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
h1
	{margin-top:6.0pt;
	margin-right:1.15pt;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:center;
	text-indent:35.4pt;
	line-height:150%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Times New Roman";
	color:windowtext;
	font-weight:bold;}
h2
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:center;
	line-height:150%;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;
	font-weight:bold;}
h3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:-5.4pt;
	margin-bottom:.0001pt;
	text-align:center;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:Arial;
	color:windowtext;
	font-weight:bold;}
h4
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:Arial;
	color:windowtext;
	font-weight:bold;}
h5
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:Arial;
	color:windowtext;
	font-weight:bold;}
h6
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Comic Sans MS";
	color:windowtext;
	font-weight:bold;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{margin-top:0cm;
	margin-right:13.85pt;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	line-height:150%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{margin:0cm;
	margin-bottom:.0001pt;
	page-break-after:avoid;
	font-size:10.0pt;
	font-family:"Comic Sans MS";
	color:windowtext;
	font-weight:bold;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Comic Sans MS";
	color:windowtext;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:5.65pt;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;
	font-weight:bold;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:11.35pt;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoToc5, li.MsoToc5, div.MsoToc5
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:48.0pt;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoToc6, li.MsoToc6, div.MsoToc6
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:60.0pt;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoToc7, li.MsoToc7, div.MsoToc7
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:72.0pt;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoToc8, li.MsoToc8, div.MsoToc8
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:84.0pt;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoToc9, li.MsoToc9, div.MsoToc9
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:96.0pt;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoCommentText, li.MsoCommentText, div.MsoCommentText
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoList2, li.MsoList2, div.MsoList2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:28.3pt;
	margin-bottom:.0001pt;
	text-indent:-14.15pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:black;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	font-size:14.0pt;
	font-family:Arial;
	color:windowtext;
	font-weight:bold;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:14.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin:0cm;
	margin-bottom:.0001pt;
	text-indent:27.0pt;
	font-size:12.0pt;
	font-family:Arial;
	color:windowtext;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	font-size:14.0pt;
	font-family:Arial;
	color:windowtext;
	font-weight:bold;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;
	font-weight:bold;
	font-style:italic;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:Arial;
	color:windowtext;}
p.MsoBodyTextIndent2, li.MsoBodyTextIndent2, div.MsoBodyTextIndent2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.85pt;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:Arial;
	color:black;}
p.MsoBodyTextIndent3, li.MsoBodyTextIndent3, div.MsoBodyTextIndent3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:42.55pt;
	margin-bottom:.0001pt;
	font-size:14.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoBlockText, li.MsoBlockText, div.MsoBlockText
	{margin-top:0cm;
	margin-right:1.1pt;
	margin-bottom:0cm;
	margin-left:27.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	line-height:150%;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Courier New";
	color:windowtext;}
p
	{margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:#000066;}
code
	{font-family:"Courier New";}
p.MsoCommentSubject, li.MsoCommentSubject, div.MsoCommentSubject
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Times New Roman";
	color:windowtext;
	font-weight:bold;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:Tahoma;
	color:windowtext;}
p.a, li.a, div.a
	{margin-top:6.0pt;
	margin-right:1.15pt;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:center;
	line-height:150%;
	page-break-after:avoid;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;
	text-transform:uppercase;
	font-weight:bold;
	font-style:italic;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:51.05pt 73.3pt 45.35pt 70.9pt;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=RU link=blue vlink=purple>

<div class=Section1>

<h1>Работа № 5</h1>

<h1>Обработка очередей</h1>

<p class=MsoBodyText style='margin-right:4.8pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><b><span style='font-size:12.0pt;line-height:150%'>Цель
работы: приобрести навыки работы с типом данных «очередь», представленным в
виде одномерного массива и односвязного линейного списка, провести
сравнительный анализ реализации алгоритмов включения и исключения элементов из
очереди при использовании указанных структур данных, оценить эффективности
программы по времени и по используемому объему памяти.</span></b></p>

<h2>Краткие теоретические сведения</h2>

<p class=MsoBodyText style='margin-right:4.8pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%'>Очередь
– это последовательный список переменной длины, включение элементов в который
идет с одной стороны (с «хвоста»), а исключение – с другой стороны (с «головы»).
Принцип работы очереди: первым пришел – первым вышел, т. е. </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>First</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'> </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>In</span><span style='font-size:12.0pt;
line-height:150%'> – </span><span lang=EN-US style='font-size:12.0pt;
line-height:150%'>First</span><span lang=EN-US style='font-size:12.0pt;
line-height:150%'> </span><span lang=EN-US style='font-size:12.0pt;line-height:
150%'>Out</span><span style='font-size:12.0pt;line-height:150%'> (</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>FIFO</span><span
style='font-size:12.0pt;line-height:150%'>).</span></p>

<p class=MsoBodyText style='margin-right:4.8pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%'>Для
«хвоста» и «головы» очереди используют соответственно два указателя </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>Pin</span><span
style='font-size:12.0pt;line-height:150%'> и </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Pout</span><span style='font-size:
12.0pt;line-height:150%'>,. то есть, исключается элемент с адресом </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>Pout</span><span
style='font-size:12.0pt;line-height:150%'> и включается элемент по адресу </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>Pin</span><span
style='font-size:12.0pt;line-height:150%'>. Моделировать простейшую линейную
очередь можно как на основе вектора (одномерного массива), так и на основе
динамического списка.</span></p>

<p class=MsoBodyText style='margin-right:4.8pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><b><span style='font-size:12.0pt;line-height:150%'>Реализация
очереди в виде массива. </span></b><span style='font-size:12.0pt;line-height:
150%'>При моделировании простейшей линейной очереди на основе одномерного
массива выделяется последовательная область памяти из </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>m</span><span style='font-size:12.0pt;
line-height:150%'> мест по </span><span lang=EN-US style='font-size:12.0pt;
line-height:150%'>L</span><span style='font-size:12.0pt;line-height:150%'>
байт, где </span><span lang=EN-US style='font-size:12.0pt;line-height:150%'>L</span><span
style='font-size:12.0pt;line-height:150%'> – размер поля данных для одного
элемента размещаемого типа. В каждый текущий момент времени выделенная память
может быть вся свободна, занята частично или занята полностью.</span></p>

<p class=MsoBodyText style='margin-right:4.95pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%'>В
начале процесса очередь пуста, при этом: </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Pin</span><span style='font-size:
12.0pt;line-height:150%'> = Pout =Q1, где </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Q</span><span style='font-size:12.0pt;
line-height:150%'>1 – адрес (индекс) первого элемента очереди, а количество
элементов очереди (</span><span lang=EN-US style='font-size:12.0pt;line-height:
150%'>K</span><span style='font-size:12.0pt;line-height:150%'>) равно нулю. При
включении очередного элемента в очередь он располагается по адресу </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>Pin</span><span
style='font-size:12.0pt;line-height:150%'>, а сам указатель </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>Pin</span><span
style='font-size:12.0pt;line-height:150%'> перемещается на длину типа данных к
началу следующего элемента (рис.</span><span style='font-size:11.0pt;
line-height:150%'>&nbsp;</span><span style='font-size:12.0pt;line-height:150%'>1).
На рисунке символом Х обозначена память, занятая элементами очереди, при этом
считаем, что под массив была выделена область памяти от </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>Q</span><span
style='font-size:12.0pt;line-height:150%'>1 до </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Qm</span><span style='font-size:12.0pt;
line-height:150%'>. </span></p>

<p class=MsoBodyText style='text-align:justify;line-height:150%'><span lang=FR>           
Q1   Q2                                                 Q</span><b><span
lang=FR style='font-size:9.0pt;line-height:150%'>m</span></b></p>

<p class=MsoBodyText style='text-align:justify;line-height:150%'>

<table cellpadding=0 cellspacing=0 align=left>
 <tr>
  <td width=23 height=1></td>
 </tr>
 <tr>
  <td></td>
  <td><img width=364 height=81 src="stage5.files/image001.gif"></td>
 </tr>
</table>

<b><span lang=EN-US style='font-size:9.0pt;line-height:150%'>&nbsp;</span></b></p>

<br clear=ALL>

<p class=MsoBodyText style='text-align:justify;line-height:150%'><span lang=FR
style='font-size:12.0pt;line-height:150%'>  </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>           </span><span lang=FR
style='font-size:12.0pt;line-height:150%'>                                                                                   </span></p>

<p class=MsoBodyText style='text-align:justify;line-height:150%'><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>                                                                                    
    </span></p>

<p class=MsoBodyText style='text-align:justify;line-height:150%'><span
lang=EN-US>                                Pout                             
Pin     </span></p>

<p class=MsoBodyText align=center style='margin-right:4.8pt;text-align:center;
text-indent:26.95pt;line-height:150%'><b><span style='font-size:12.0pt;
line-height:150%'>Рис. 1</span></b></p>

<p class=MsoBodyText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>В очереди исключается
элемент, находящийся по адресу (индексу) </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Pout</span><span style='font-size:
12.0pt;line-height:150%'>, а указатель </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Pout</span><span style='font-size:
12.0pt;line-height:150%'>, как и в случае добавления, перемещается к следующему
элементу. Переполнение очереди наступает, когда указатель «хвоста» </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>Pin</span><span
style='font-size:12.0pt;line-height:150%'> перейдет границу последнего
элемента, т. е. возникает ситуация, при которой </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Pin</span><span style='font-size:
12.0pt;line-height:150%'> = </span><span lang=EN-US style='font-size:12.0pt;
line-height:150%'>Qm</span><span style='font-size:12.0pt;line-height:150%'>+</span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>L</span><span
style='font-size:12.0pt;line-height:150%'>. Причем, переполнение наступает
независимо от состояния </span><span lang=EN-US style='font-size:12.0pt;
line-height:150%'>Pout</span><span style='font-size:12.0pt;line-height:150%'>,
т. е. когда, несмотря на наличие свободной памяти слева от </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>Pout</span><span
style='font-size:12.0pt;line-height:150%'> нет возможности поместить следующий
элемент. Чтобы не случалось переполнения, при каждом исключении из очереди
обычно производят сдвиг всех элементов к «голове». Тогда переполнение произойдет
лишь  в том случае, если все </span><span lang=EN-US style='font-size:12.0pt;
line-height:150%'>m</span><span style='font-size:12.0pt;line-height:150%'> мест
выделенной памяти заняты. Но на эти последовательные сдвиги затрачивается
время. Поэтому более эффективно использовать <i>кольцевую </i>очередь. (рис.
2). Добавление происходит в первые ячейки массива, если «хвост» массива занят.</span></p>

<p class=MsoBodyText style='text-align:justify;line-height:150%'><span
style='position:absolute;z-index:14;left:0px;margin-left:126px;margin-top:9px;
width:12px;height:28px'><img width=12 height=28 src="stage5.files/image002.gif"></span><span
style='position:absolute;z-index:13;left:0px;margin-left:90px;margin-top:9px;
width:12px;height:28px'><img width=12 height=28 src="stage5.files/image002.gif"></span><span
lang=EN-US>                     </span><span lang=FR>Q1   
Q2                                                         Q</span><b><span
lang=FR style='font-size:9.0pt;line-height:150%'>m</span></b><span lang=FR>    </span></p>

<p class=MsoBodyText style='text-align:justify;line-height:150%'><b><span
lang=FR style='font-size:12.0pt;line-height:150%'>&nbsp;</span></b></p>

<p class=MsoBodyText style='text-align:justify;line-height:150%'><span
style='position:absolute;z-index:19;left:0px;margin-left:306px;margin-top:8px;
width:12px;height:27px'><img width=12 height=27 src="stage5.files/image003.gif"></span><span
style='position:absolute;z-index:20;left:0px;margin-left:162px;margin-top:7px;
width:12px;height:27px'><img width=12 height=27 src="stage5.files/image004.gif"></span><span
style='position:relative;z-index:18'><span style='left:0px;position:absolute;
left:414px;top:-52px;width:12px;height:27px'><img width=12 height=27
src="stage5.files/image003.gif"></span></span><span style='position:relative;
z-index:17'><span style='left:0px;position:absolute;left:419px;top:-28px;
width:2px;height:38px'><img width=2 height=38 src="stage5.files/image005.gif"></span></span><span
style='position:relative;z-index:16'><span style='left:0px;position:absolute;
left:383px;top:-28px;width:2px;height:38px'><img width=2 height=38
src="stage5.files/image005.gif"></span></span><span style='position:relative;
z-index:15'><span style='left:0px;position:absolute;left:347px;top:-28px;
width:2px;height:38px'><img width=2 height=38 src="stage5.files/image005.gif"></span></span><span
style='position:relative;z-index:12'><span style='left:0px;position:absolute;
left:311px;top:-28px;width:2px;height:38px'><img width=2 height=38
src="stage5.files/image005.gif"></span></span><span style='position:relative;
z-index:11'><span style='left:0px;position:absolute;left:275px;top:-28px;
width:2px;height:38px'><img width=2 height=38 src="stage5.files/image005.gif"></span></span><span
style='position:relative;z-index:10'><span style='left:0px;position:absolute;
left:239px;top:-28px;width:2px;height:38px'><img width=2 height=38
src="stage5.files/image005.gif"></span></span><span style='position:relative;
z-index:9'><span style='left:0px;position:absolute;left:203px;top:-28px;
width:2px;height:38px'><img width=2 height=38 src="stage5.files/image005.gif"></span></span><span
style='position:relative;z-index:8'><span style='left:0px;position:absolute;
left:167px;top:-28px;width:2px;height:38px'><img width=2 height=38
src="stage5.files/image005.gif"></span></span><span style='position:relative;
z-index:7'><span style='left:0px;position:absolute;left:131px;top:-28px;
width:2px;height:38px'><img width=2 height=38 src="stage5.files/image005.gif"></span></span><span
style='position:relative;z-index:6'><span style='left:0px;position:absolute;
left:95px;top:-28px;width:366px;height:42px'>

<table cellpadding=0 cellspacing=0>
 <tr>
  <td width=366 height=42 bgcolor=white style='border:1.0pt solid black;
  vertical-align:top;background:white'><span style='position:absolute;
  left:0pt;z-index:6'>
  <table cellpadding=0 cellspacing=0 width="100%">
   <tr>
    <td>
    <div style='padding:4.6pt 8.2pt 4.6pt 8.2pt'>
    <p class=MsoNormal>Х       Х                                          Х    
    Х       Х </p>
    </div>
    </td>
   </tr>
  </table>
  </span>&nbsp;</td>
 </tr>
</table>

</span></span><span lang=FR> </span></p>

<p class=MsoBodyText style='text-align:justify;line-height:150%'><span lang=FR>                             
Pin                                 Pout  </span></p>

<p class=MsoBodyText align=center style='margin-top:6.0pt;margin-right:4.8pt;
margin-bottom:6.0pt;margin-left:0cm;text-align:center;text-indent:26.95pt;
line-height:150%'><b><span style='font-size:12.0pt;line-height:150%'>Рис. 2</span></b></p>

<p class=MsoBodyText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>При равенстве </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>Pin</span><span
style='font-size:12.0pt;line-height:150%'> = </span><span lang=FR
style='font-size:12.0pt;line-height:150%'>Qm</span><span style='font-size:12.0pt;
line-height:150%'>+</span><span lang=EN-US style='font-size:12.0pt;line-height:
150%'>L</span><span style='font-size:12.0pt;line-height:150%'>, означающем, что
«хвост» вышел за конец очереди, производят коррекцию: </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Pin</span><span style='font-size:
12.0pt;line-height:150%'> = </span><span lang=EN-US style='font-size:12.0pt;
line-height:150%'>Q</span><span style='font-size:12.0pt;line-height:150%'>1.
Если </span><span lang=EN-US style='font-size:12.0pt;line-height:150%'>Pout</span><span
style='font-size:12.0pt;line-height:150%'> &gt; </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Q</span><span style='font-size:12.0pt;
line-height:150%'>1, то еще имеется свободное место. В случае кольцевой очереди
может быть </span><span lang=EN-US style='font-size:12.0pt;line-height:150%'>Pin</span><span
style='font-size:12.0pt;line-height:150%'> &gt; </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Pout</span><span style='font-size:
12.0pt;line-height:150%'>, (т. е. «хвост» располагается дальше от начала
массива, чем «голова») и Pin &lt; Pout, (т. е. «хвост» ближе к началу массива,
чем  «голова»). При равенстве </span><span lang=EN-US style='font-size:12.0pt;
line-height:150%'>Pin</span><span style='font-size:12.0pt;line-height:150%'> = </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>Pout</span><span
style='font-size:12.0pt;line-height:150%'>, означающем, что «хвост» и «голова»
совпали, очередь может быть как пустой, так и заполненной (т. е. </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>K</span><span
style='font-size:12.0pt;line-height:150%'>=0  или </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>K</span><span style='font-size:12.0pt;
line-height:150%'>=</span><span lang=EN-US style='font-size:12.0pt;line-height:
150%'>m</span><span style='font-size:12.0pt;line-height:150%'>).</span></p>

<p class=MsoBodyText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>В кольцевой структуре нет
необходимости сдвигать элементы, но зато сложнее реализовать алгоритмы
включения и исключения элементов. Но даже в этом случае проблема переполнения
радикально все равно не решается, так как при заполнении очереди возможна
ситуация, когда следующий элемент будет «затирать» первый, что потребует дополнительных
проверок заполнения очереди. Граничные адреса очереди являются параметрами
физической структуры. Эта структура обычно дополняется дескриптором очереди, в
котором хранятся имя очереди, адреса нижней и верхней границ очереди, адреса
включения и исключения элементов (</span><span lang=EN-US style='font-size:
12.0pt;line-height:150%'>Pin</span><span style='font-size:12.0pt;line-height:
150%'> и </span><span lang=EN-US style='font-size:12.0pt;line-height:150%'>Pout</span><span
style='font-size:12.0pt;line-height:150%'>), а также максимальное количество
заполненных элементов и описание (тип)  элемента очереди.</span></p>

<p class=MsoBodyText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><b><span style='font-size:12.0pt;line-height:150%'>Реализация очереди в
виде линейного списка. </span></b><span style='font-size:12.0pt;line-height:
150%'>Большинство проблем, возникающих при реализации очереди в виде массива,
устраняется при реализации очереди на основе односвязного линейного списка,
каждый элемент которого содержит информационное поле и поле с указателем
«вперед» (на следующий элемент). В этом случае в статической памяти можно либо
хранить адрес начала и конца очереди, либо – адрес начала очереди и количество
элементов. Исходное состояние очереди: </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Pout</span><span style='font-size:
12.0pt;line-height:150%'> = </span><span lang=EN-US style='font-size:12.0pt;
line-height:150%'>Pin</span><span style='font-size:12.0pt;line-height:150%'> – 
пустой указатель, </span><span lang=EN-US style='font-size:12.0pt;line-height:
150%'>K</span><span style='font-size:12.0pt;line-height:150%'> = 0.</span></p>

<p class=MsoBodyText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>Основные операции над
очередью: включение элемента в очередь и исключение элемента из очереди.</span></p>

<p class=MsoBodyText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>Как было сказано выше, включение<b><i>
</i></b>элемента в очередь осуществляется по адресу </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Pin</span><span style='font-size:
12.0pt;line-height:150%'>, указатель «вперед» у включаемого элемента – пустой.
В этом случае размер очереди ограничивается только объемом доступной памяти.
Исключается элемент, находящийся по адресу </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>Pout</span><span style='font-size:
12.0pt;line-height:150%'>. Указатель </span><span lang=EN-US style='font-size:
12.0pt;line-height:150%'>Pout</span><span style='font-size:12.0pt;line-height:
150%'> при этом переместится на предыдущий элемент. При исключении<b><i> </i></b>элемента
необходимо следить за опустошением очереди, а также не забывать освобождать
память под удаляемый элемент. </span></p>

<p class=MsoBodyText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>При физической реализации
очереди в виде односвязного линейного списка дескриптор будет отличаться
отсутствием верхней границы очереди. В этом случае объем очереди ограничивается
только объемом доступной оперативной памяти.</span></p>

<p class=MsoBodyText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>В процессе моделирования
очереди может оказаться, что при последовательных запросах на выделение и
освобождении памяти под очередной элемент выделяется не та память, которая была
только что освобождена при удалении элемента. Участки свободной и занятой
памяти могут чередоваться, т.е. может возникнуть фрагментация памяти.</span></p>

<h2>Задание</h2>

<p class=MsoBodyText style='text-align:justify;text-indent:35.45pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>Система массового
обслуживания состоит из обслуживающих аппаратов (ОА) и очередей заявок двух
типов, различающихся временем прихода и обработки. Заявки поступают в очереди
по случайному закону с различными интервалами времени (в зависимости от
варианта задания), равномерно распределенными от начального значения (иногда от
нуля) до максимального количества единиц времени. В ОА заявки поступают из
«головы» очереди по одной и обслуживаются за указанные в задании времена,
распределенные равновероятно от минимального до максимального значений (все
времена – вещественного типа).</span></p>

<p class=MsoBodyText style='text-align:justify;text-indent:35.45pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>Требуется смоделировать
процесс обслуживания первых 1000 заявок первого типа, выдавая после
обслуживания каждых 100 заявок первого типа информацию о текущей и средней
длине каждой очереди и о среднем времени пребывания заявок каждого типа в
очереди. В конце процесса необходимо выдать на экран общее время моделирования,
время простоя ОА, количество вошедших в систему и вышедших из нее заявок
первого и второго типов.</span></p>

<p class=MsoBodyText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>Очередь необходимо
представить в виде вектора и списка. Все операции должны быть оформлены
подпрограммами. Алгоритм для реализации задачи один, независимо от формы
представления очереди. Необходимо сравнить эффективность различного
представления очереди по времени выполнения программы и по требуемой памяти.
При реализации очереди списком нужно проследить, каким образом происходит выделение
и освобождение участков памяти, для чего по запросу пользователя необходимо
выдать на экран адреса памяти, содержащие элементы очереди при добавлении или
удалении очередного элемента.</span></p>

<p class=MsoBodyText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>Длительности обработки
заявок и интервалы между их приходом (</span><span style='font-size:12.0pt;
line-height:150%'>единицы времени – е.в.) – случайные равномерно распределенные
числа<b> </b><i>вещественного типа</i> в указанном диапазоне (например, от </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>t</span><span
style='font-size:12.0pt;line-height:150%'>1 до </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>t</span><span style='font-size:12.0pt;
line-height:150%'>2). Для получения случайной величины в указанном диапазоне
значений можно использовать генератор случайных чисел с параметром функции от 0
до 1, возвращающий значение </span><span lang=EN-US style='font-size:12.0pt;
line-height:150%'>t</span><span style='font-size:12.0pt;line-height:150%'>.
Используя линейное преобразование </span><span lang=EN-US style='font-size:
12.0pt;line-height:150%'>time</span><span style='font-size:12.0pt;line-height:
150%'> = (</span><span lang=EN-US style='font-size:12.0pt;line-height:150%'>t</span><span
style='font-size:12.0pt;line-height:150%'>2–</span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>t</span><span style='font-size:12.0pt;
line-height:150%'>1)*</span><span lang=EN-US style='font-size:12.0pt;
line-height:150%'>t</span><span style='font-size:12.0pt;line-height:150%'> + </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>t</span><span
style='font-size:12.0pt;line-height:150%'>1 можно получить необходимое время.
Имея время прихода первой заявки, допустим, </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>t</span><sub><span style='font-size:
12.0pt;line-height:150%'>прихода1</span></sub><span style='font-size:12.0pt;
line-height:150%'>= </span><span lang=EN-US style='font-size:12.0pt;line-height:
150%'>time</span><span style='font-size:12.0pt;line-height:150%'>, можно
определить время прихода следующей заявки как </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>t</span><sub><span style='font-size:
12.0pt;line-height:150%'>прихода2 </span></sub><span style='font-size:12.0pt;
line-height:150%'>= </span><span lang=EN-US style='font-size:12.0pt;line-height:
150%'>t</span><sub><span style='font-size:12.0pt;line-height:150%'>прихода1</span></sub><span
style='font-size:12.0pt;line-height:150%'>+ </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'>time</span><span style='font-size:
12.0pt;line-height:150%'>. Следовательно, время прихода 1000 заявок будет равно</span></p>

<p class=MsoBodyText align=center style='text-align:center;text-indent:26.95pt;
line-height:150%'><span lang=EN-US style='font-size:12.0pt;line-height:150%'>t</span><sub><span
style='font-size:12.0pt;line-height:150%'>прихода</span></sub><span
style='font-size:12.0pt;line-height:150%'>= </span><span lang=EN-US
style='font-size:12.0pt;line-height:150%'><sub><img width=51 height=61
src="stage5.files/image006.gif"></sub>t</span><sub><span style='font-size:12.0pt;
line-height:150%'>прихода</span></sub><sub><span lang=EN-US style='font-size:
12.0pt;line-height:150%'>i</span></sub></p>

<p class=MsoBodyText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>Среднее время прихода или
обработки заявок можно подсчитать как среднее арифметическое временного
диапазона (например, если </span><span lang=EN-US style='font-size:12.0pt;
line-height:150%'>t</span><span style='font-size:12.0pt;line-height:150%'>1 =
1, а </span><span lang=EN-US style='font-size:12.0pt;line-height:150%'>t</span><span
style='font-size:12.0pt;line-height:150%'>2 = 4, то среднее время будет равно </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%'>t</span><sub><span
style='font-size:12.0pt;line-height:150%'>ср</span></sub><span
style='font-size:12.0pt;line-height:150%'> = (1+4)/2 = 2.5). Аналогичным
образом рассчитывается время окончания обработки заявок и время выхода заявок
из системы.</span></p>

<p class=MsoTitle style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>В один и тот же момент времени одна заявка может придти в
очередь, а другая – начать обрабатываться или выйти из системы. Допустим,
пришла заявка первого типа, а в этот же момент заявка второго типа закончила
обработку и вышла из системы, т.е. </span><span lang=EN-US style='font-size:
12.0pt;line-height:150%;font-family:"Times New Roman";font-weight:normal'>t</span><sub><span
style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>прихода1 </span></sub><span style='font-size:12.0pt;
line-height:150%;font-family:"Times New Roman";font-weight:normal'>= </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>t</span><sub><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman";font-weight:normal'>обработки2  </span></sub><span
style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>=  </span><span lang=EN-US style='font-size:12.0pt;
line-height:150%;font-family:"Times New Roman";font-weight:normal'>t</span><sub><span
style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>выхода2. </span></sub><span style='font-size:12.0pt;
line-height:150%;font-family:"Times New Roman";font-weight:normal'> Таким
образом, модельное время прихода заявки первого типа в систему и модельное
время выхода заявки второго типа из системы совпали. Процессы обработки одной
заявки и прихода другой заявки идут одновременно, т.е. протекают во времени
параллельно, а не последовательно.</span></p>

<p class=MsoBodyText2 style='text-indent:36.0pt'><span style='font-weight:normal;
font-style:normal'>В приложении приведены примерные варианты заданий.</span></p>

<h2>Указания к выполнению работы</h2>

<p class=MsoTitle style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>Рассогласование между средними ожидаемыми временами и
временами, полученными в моделирующей программе должно быть не больше 1</span><span
style='font-size:12.0pt;line-height:150%;font-weight:normal'>–</span><span
style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>2%. </span></p>

<p class=MsoTitle style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>При проверке работы программы по входу заявок ожидаемое
время моделирования равно среднему интервалу между приходом заявок, умноженному
на количество вошедших заявок. Если есть две очереди, то проверка ведется по
каждой из очередей.</span></p>

<p class=MsoTitle style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>При проверке работы программы по выходу заявок ожидаемое
время обработки в ОА должно быть равно среднему времени обработки заявки,
умноженному на количество обработанных заявок. Если есть две очереди и один
аппарат, то это будет сумма времен обслуживаний заявок каждого типа. </span></p>

<p class=MsoTitle style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>Если среднее время обработки заявок больше среднего
интервала между их поступлением, то очередь будет расти и время моделирования
будет определяться временем обработки заявок. При этом количество вошедших
заявок должно быть равно времени моделирования, деленному на средний интервал
между приходом заявок.</span></p>

<p class=MsoTitle style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>Если средний интервал между поступлением заявок больше или
равен среднему времени их обработки, то длина очереди стабилизируется (может
стремиться к нулю, единице или к какой-то другой величине) и время
моделирования будет определяться временем прихода заявок. При этом ОА может
работать с простоем, если время окончания обработки заявки будет меньше, чем
время прихода очередной заявки. Тогда время простоя будет определяться разницей
этих времен, т. е. </span><span lang=EN-US style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman";font-weight:normal'>t</span><sub><span
style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>простоя </span></sub><span style='font-size:12.0pt;
line-height:150%;font-family:"Times New Roman";font-weight:normal'>= </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>t</span><sub><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman";font-weight:normal'>обработки</span></sub><span
style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'> </span><span style='font-size:12.0pt;line-height:150%;
font-family:"Times New Roman"'>–</span><span style='font-size:12.0pt;
line-height:150%;font-family:"Times New Roman";font-weight:normal'>- </span><span
lang=EN-US style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>t</span><sub><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman";font-weight:normal'>прихода.  </span></sub><span
style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>Общее время простоя ОА будет равно сумме простоя перед
обслуживанием каждой заявки, если простой имел место.</span></p>

<p class=MsoTitle style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>Если есть одна очередь и два аппарата, соединенных
последовательно, то время моделирования будет определяться временем обработки в
наиболее загруженном аппарате. </span></p>

<p class=MsoTitle style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman";
font-weight:normal'>Необходимо привести тестирование программы. Рассмотрим
пример.</span></p>

<p class=MsoPlainText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman"'>Программа
представляет собой модель очереди. Никакие данные в программу не вводятся.</span></p>

<p class=MsoPlainText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman"'>В
течение всего времени работы в очередь поступают заявки по случайному закону с
временами в интервале от 0 до 10 е. в., обслуживаются заявки по случайному закону
со временами в интервале от 0 до 2 е. в. </span></p>

<p class=MsoPlainText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman"'>Каждая
заявка после обслуживания в аппарате возвращается в «хвост» очереди для
повторной обработки и после 4-х циклов обслуживания покидает систему. </span></p>

<p class=MsoPlainText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman"'>После
выхода из системы обработки каждой 100-й заявки выводится текущее состояние
очереди, а именно количество вошедших и вышедших заявок, текущая длина очереди
и среднее время пребывание заявок в очереди. </span></p>

<p class=MsoPlainText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman"'>Система
завершает свою работу по выходу из нее 1000 заявок. На экране при этом
отображается общее время моделирования, время простоя ОА, количество вошедших и
вышедших из очереди заявок.</span></p>

<p class=MsoPlainText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman"'>После
окончания работы следует проверить правильность результатов моделирования.</span></p>

<p class=MsoPlainText style='text-align:justify;text-indent:26.95pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman"'>Теоретически
рассчитываем время моделирования. Время обработки заявки лежит в интервале от 0
до 2 е.в., значит среднее значение времени обработки одной заявки 1 е.в. Так
как каждая заявка обрабатывается 4 раза до выхода из системы, то среднее время
обработки одной заявки будет: 1*4=4 е.в., а общее время обработки 1000 заявок
будет: 1000*4 = 4000 е.в. Для прихода 1000 заявок, если каждая приходит в
среднем за 5 е.в. потребуется 5000 е.в. Следовательно, ОА работает с простоем и
время моделирования будет определяться временем прихода заявок, т.е. оно должно
быть равно 5000 е.в. Время простоя будет равно разнице между временем обработки
заявок и временем их обслуживания: 5000 – 4000 = 1000 е.в.</span></p>

<p class=MsoPlainText style='margin-right:-2.0pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:"Times New Roman"'>На практике при выполнении программы получены
следующие  результаты:</span></p>

<p class=MsoPlainText style='margin-right:-2.0pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:"Times New Roman"'>время моделирования  </span><span
style='font-size:12.0pt;line-height:150%'>–</span><span style='font-size:12.0pt;
line-height:150%;font-family:"Times New Roman"'>  5054.458 е.в.</span></p>

<p class=MsoPlainText style='margin-right:-2.0pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:"Times New Roman"'>время простоя  составило </span><span
style='font-size:12.0pt;line-height:150%'>–</span><span style='font-size:12.0pt;
line-height:150%;font-family:"Times New Roman"'> 987.971 е.в.</span></p>

<p class=MsoPlainText style='margin-right:-2.0pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:"Times New Roman"'>вошедших заявок было  </span><span
style='font-size:12.0pt;line-height:150%'>–</span><span style='font-size:12.0pt;
line-height:150%;font-family:"Times New Roman"'>  1018</span></p>

<p class=MsoPlainText style='margin-right:-2.0pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:"Times New Roman"'>вышедших заявок – 1000</span></p>

<p class=MsoPlainText style='margin-right:-2.0pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:"Times New Roman"'>аппарат сработал – 4019 раз</span></p>

<p class=MsoPlainText style='margin-right:-2.0pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:"Times New Roman"'>время работы ОА составило   t = 1*4019 = 4019
е.в.</span></p>

<p class=MsoPlainText style='margin-right:-2.0pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:"Times New Roman"'>Сравниваем практические результаты с
теоретическими расчетами.</span></p>

<p class=MsoPlainText style='margin-right:-2.0pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:"Times New Roman"'>Для проверки правильности работы системы по
входу общее время моделирования делим на время прихода одной заявки: </span></p>

<p class=MsoPlainText align=center style='margin-right:-2.0pt;text-align:center;
text-indent:26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman"'>5054.458 / 5 = 1010.8 заявок ~ 1011 заявок</span></p>

<p class=MsoPlainText style='margin-right:-2.0pt;text-align:justify;text-indent:
26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:"Times New Roman"'>Определяем предполагаемое количество вошедших
заявок, фактически их пришло 1018, т.е. погрешность составляет</span></p>

<p class=MsoPlainText align=center style='margin-right:-2.0pt;text-align:center;
text-indent:26.95pt;line-height:150%'><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman"'>|100%(1018-1011)/1011| = 0.692%</span></p>

<p class=MsoPlainText style='margin-right:-1.85pt;text-align:justify;
text-indent:27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman"'>Проверим правильность работы системы по
выходу. За время моделирования аппарат работал 4019 е.в. и простаивал – 987.971
е.в. Время моделирования должно было составить: 5006.971 е.в., а оно составило
– 5054.458. Получаем погрешность:</span></p>

<p class=MsoPlainText align=center style='margin-right:-1.85pt;text-align:center;
text-indent:27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman"'>100%(5054.458</span><span style='font-size:
12.0pt;line-height:150%'>–</span><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman"'>5006.971)/5006.971 = 0.9484%.</span></p>

<p class=MsoPlainText style='margin-right:-1.85pt;text-align:justify;
text-indent:27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman"'>Вычислим погрешность еще по-другому.
Расчетное время работы равно 5000е.в., а фактическое </span><span
style='font-size:12.0pt;line-height:150%'>–</span><span style='font-size:12.0pt;
line-height:150%;font-family:"Times New Roman"'>  5054.458,тогда погрешность
составит </span></p>

<p class=MsoPlainText align=center style='margin-right:-1.85pt;text-align:center;
text-indent:27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman"'>100%(5054.458-5000)/5000 = 1,08916%.</span></p>

<p class=MsoPlainText style='margin-right:-1.85pt;text-align:justify;
text-indent:27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman"'>Таким образом, проверка работы системы по
входным и выходным данным показала, что погрешность работы системы составляет
не более 1.1%, что удовлетворяет поставленному условию.</span></p>

<p class=MsoPlainText style='margin-right:-1.85pt;text-align:justify;
text-indent:27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman"'>Интерфейс программы должен быть понятен
неподготовленному пользователю. При разработке интерфейса программы следует
предусмотреть:</span></p>

<p class=MsoPlainText style='margin-top:0cm;margin-right:-1.85pt;margin-bottom:
0cm;margin-left:36.0pt;margin-bottom:.0001pt;text-align:justify;text-indent:
-18.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman"'>возможность
изменения времен прихода и обработки заявок с экрана;</span></p>

<p class=MsoPlainText style='margin-top:0cm;margin-right:-1.85pt;margin-bottom:
0cm;margin-left:36.0pt;margin-bottom:.0001pt;text-align:justify;text-indent:
-18.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman"'>наличие
пояснений при выводе результата;</span></p>

<p class=MsoPlainText style='margin-top:0cm;margin-right:-1.85pt;margin-bottom:
0cm;margin-left:36.0pt;margin-bottom:.0001pt;text-align:justify;text-indent:
-18.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman"'>вывод
процента погрешности работы программы.</span></p>

<p class=MsoPlainText style='margin-right:-1.85pt;text-align:justify;
text-indent:27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:
150%;font-family:"Times New Roman"'>Кроме того, нужно вывести на экран время
выполнения программы при реализации очереди списком и массивом, а также
требуемый при этом объем памяти.</span></p>

<p class=MsoBodyText style='text-align:justify;text-indent:27.0pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>При тестировании
программы необходимо:</span></p>

<p class=MsoPlainText style='margin-top:0cm;margin-right:-1.85pt;margin-bottom:
0cm;margin-left:36.0pt;margin-bottom:.0001pt;text-align:justify;text-indent:
-18.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman"'>проверить
правильность работы программы при различном заполнении очередей, т.е., когда
время моделирования определяется временем обработки заявок и когда определяется
временем прихода заявок;</span></p>

<p class=MsoPlainText style='margin-top:0cm;margin-right:-1.85pt;margin-bottom:
0cm;margin-left:36.0pt;margin-bottom:.0001pt;text-align:justify;text-indent:
-18.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:12.0pt;line-height:150%;font-family:"Times New Roman"'>отследить
переполнение очереди, если очередь в программе ограничена.</span></p>

<p class=MsoBodyText style='margin-right:4.95pt;text-align:justify;text-indent:
27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%'>При
реализации очереди списком необходимо тщательно следить за освобождением памяти
при удалении элемента из очереди. При этом по запросу пользователя должны
выдаваться на экран адреса памяти, содержащие элементы очереди при добавлении
или удалении элемента очереди. Следует проверять, происходит ли при этом
фрагментация памяти (выделение непоследовательных адресов память).</span></p>

<h2>Содержание отчета</h2>

<p class=MsoBodyTextIndent style='margin-top:6.0pt;margin-right:0cm;margin-bottom:
6.0pt;margin-left:0cm;text-align:justify;line-height:150%'><span
style='font-family:"Times New Roman"'>Отчет по лабораторной работе должен
содержать выводы, о том, в каких случаях применение какой структуры данных
более целесообразно для реализации очереди, какую выгоду дает та или иная
реализация. Выводы должны быть подтверждены результатами числовых сравнений
расходования памяти и времени выполнения схожих операций. </span></p>

<p class=MsoBodyTextIndent style='margin-top:6.0pt;margin-right:0cm;margin-bottom:
6.0pt;margin-left:0cm;text-align:justify;line-height:150%'><span
style='font-family:"Times New Roman"'>В отчете по лабораторной работе также
должны быть даны ответы на следующие вопросы:</span></p>

<p class=MsoBodyText style='margin-left:0cm;text-align:justify;text-indent:
27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
color:black'>1.</span><span style='font-size:12.0pt;line-height:150%'>Что такое
очередь?</span></p>

<p class=MsoBodyText style='margin-left:0cm;text-align:justify;text-indent:
27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
color:black'>2.</span><span style='font-size:12.0pt;line-height:150%'>Каким
образом и какой объем памяти выделяется под хранение очереди при различной ее
реализации?</span></p>

<p class=MsoBodyText style='margin-left:0cm;text-align:justify;text-indent:
27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
color:black'>3.</span><span style='font-size:12.0pt;line-height:150%'>Каким
образом освобождается память при удалении элемента из очереди при ее различной
реализации?</span></p>

<p class=MsoBodyText style='margin-left:0cm;text-align:justify;text-indent:
27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
color:black'>4.</span><span style='font-size:12.0pt;line-height:150%'>Что
происходит с элементами очереди при ее просмотре?</span></p>

<p class=MsoBodyText style='margin-left:0cm;text-align:justify;text-indent:
27.0pt;line-height:150%'><span style='font-size:12.0pt;line-height:150%;
color:black'>5.</span><span style='font-size:12.0pt;line-height:150%'>Каким
образом эффективнее реализовывать очередь. От чего это зависит?</span></p>

<p class=MsoNormal style='margin-left:0cm;text-align:justify;text-indent:27.0pt;
line-height:150%'><span style='color:black'>6.</span>В каком случае лучше
реализовать очередь посредством указателей, а в каком – массивом?</p>

<p class=MsoNormal style='margin-left:0cm;text-align:justify;text-indent:27.0pt;
line-height:150%'><span style='color:black'>7.</span>Каковы достоинства и
недостатки различных реализаций очереди в зависимости от выполняемых  над ней
операций?</p>

<p class=MsoNormal style='margin-left:0cm;text-align:justify;text-indent:27.0pt;
line-height:150%'><span style='color:black'>8.</span>Что такое фрагментация
памяти?</p>

<p class=MsoNormal style='margin-left:0cm;text-align:justify;text-indent:27.0pt;
line-height:150%'><span style='color:black'>9.</span>На что необходимо обратить
внимание при тестировании программы?</p>

<p class=MsoNormal style='margin-left:0cm;text-align:justify;text-indent:27.0pt;
line-height:150%'><span style='color:black'>10.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span>Каким образом физически выделяется и освобождается память при
динамических запросах?</p>

<p class=MsoBodyText style='text-align:justify;text-indent:27.0pt;line-height:
150%'><span style='font-size:12.0pt;line-height:150%'>Отчет должен быть
представлен в электронном или печатном виде.</span></p>

<h2>Список рекомендуемой литературы </h2>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal style='text-align:justify;line-height:150%'><i><span
     style='font-size:11.0pt;line-height:150%'>Вирт Н. </span></i><span
     style='font-size:11.0pt;line-height:150%'>Алгоритмы и структуры данных:
     Пер. с англ. СПб.: Невский диалект, 2001. С.<i>&nbsp;</i>69–71, 205–235.</span></li>
</ol>

<p class=MsoBodyText style='margin-left:36.0pt;text-align:justify;text-indent:
-18.0pt;line-height:150%'><span style='font-size:11.0pt;line-height:150%'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><i><span
style='font-size:11.0pt;line-height:150%'>Ахо А.,. Хопкрофт Д., Ульман</span></i><span
style='font-size:11.0pt;line-height:150%'> <i>Д. </i> Структуры данных и
алгоритмы.: Пер. с англ.  М.: Издат. дом «Вильямс», 2000.  С. 58–61.</span></p>

<p class=MsoList2 style='margin-left:36.0pt;text-align:justify;text-indent:
-18.0pt;line-height:150%'><span style='font-size:11.0pt;line-height:150%'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><i><span
style='font-size:11.0pt;line-height:150%'>Кормен Т., Лейзерсон Ч., Ривест Р</span></i><span
style='font-size:11.0pt;line-height:150%'>., Алгоритмы: построение и анализ: Пер.
с англ. М.: МЦНМО, 2001. С. 194 –198. </span></p>

<p class=MsoList2 style='margin-left:0cm;text-align:justify;text-indent:0cm;
line-height:150%'><span style='font-size:11.0pt;line-height:150%'>&nbsp;</span></p>

<p class=MsoList2 align=right style='margin-left:0cm;text-align:right;
text-indent:0cm;line-height:150%'><b>Приложение</b></p>

<p class=MsoList2 style='margin-top:6.0pt;margin-right:0cm;margin-bottom:6.0pt;
margin-left:0cm;text-indent:27.0pt;line-height:150%'><b>Примерные варианты
заданий </b></p>

<p class=MsoBodyTextIndent style='line-height:150%'><span style='font-family:
"Times New Roman"'>1. Система массового обслуживания состоит из обслуживающего
аппарата (ОА) и очереди заявок двух типов (рис. 3).</span></p>

<p class=MsoHeader style='line-height:150%'>           <b><span lang=EN-US>T1 </span></b><span
lang=EN-US>                                          <b>T2,</b></span><b>Т</b><b><span
lang=EN-US>3</span></b></p>

<p class=MsoNormal style='line-height:150%'><span style='position:relative;
z-index:4'><span style='position:absolute;left:-1px;top:-1px;width:386px;
height:86px'><img width=386 height=86 src="stage5.files/image007.gif"></span></span><span
style='position:relative;z-index:2'><span style='position:absolute;left:383px;
top:-2px;width:27px;height:12px'><img width=27 height=12
src="stage5.files/image008.gif"></span></span><span style='position:absolute;
z-index:1;margin-left:47px;margin-top:3px;width:2px;height:38px'><img width=2
height=38 src="stage5.files/image005.gif"></span><span lang=EN-US
style='font-family:Arial'>  </span></p>

<p class=MsoNormal style='line-height:150%'><span style='position:absolute;
z-index:5;margin-left:294px;margin-top:3px;width:12px;height:27px'><img
width=12 height=27 src="stage5.files/image003.gif"></span><span lang=EN-US
style='font-family:Arial'>                                            <b>T3 </b></span></p>

<p class=MsoNormal style='line-height:150%'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText align=center style='margin-top:6.0pt;margin-right:4.8pt;
margin-bottom:6.0pt;margin-left:0cm;text-align:center;text-indent:26.95pt;
line-height:150%'><b><span style='font-size:12.0pt;line-height:150%'>Рис. 3</span></b></p>

<p class=MsoNormal style='text-align:justify;text-indent:27.0pt;line-height:
150%'>Заявки первого типа поступают в &quot;хвост&quot; очереди по случайному
закону с интервалом времени <b>Т1,</b> равномерно распределенным от <b>0 до 5</b>
единиц времени  (е.в.). В ОА они поступают из &quot;головы&quot; очереди по одной
и обслуживаются также равновероятно за время <b>Т2</b> от <b>0 до 4</b> е.в.,
после чего покидают систему.</p>

<p class=MsoNormal style='text-align:justify;text-indent:27.0pt;line-height:
150%'>Единственная заявка второго типа постоянно обращается в системе, обслуживаясь
в  ОА равновероятно за время <b>Т3</b> от  <b>0 до 4</b> е.в. и  возвращаясь в
очередь не далее  4-й позиции от &quot;головы&quot;. В начале процесса заявка
второго типа входит в ОА, оставляя пустую очередь. (все времена – вещественного
типа)</p>

<div style='border:none;border-bottom:solid windowtext 1.0pt;padding:0cm 0cm 1.0pt 0cm'>

<p class=MsoNormal style='text-align:justify;text-indent:26.95pt;line-height:
150%;border:none;padding:0cm'>Требуется смоделировать процесс обслуживания
первой партии из 1000 заявок <b>первого типа</b>, выдавая после обслуживания
каждых 100 заявок первого типа  информацию о текущей и средней длине очереди, количестве
вошедших и вышедших заявок и среднем времени пребывания заявок в очереди, а в
конце процесса – общее время моделирования, время простоя аппарата, количество
вошедших в систему и вышедших из нее заявок первого типа и количество обращений
заявок второго типа. Обеспечить по требованию пользователя выдачу на экран
адресов элементов очереди при удалении и добавлении элементов. Проследить,
возникает ли при этом фрагментация памяти.</p>

</div>

<p class=MsoNormal style='text-align:justify;text-indent:26.95pt;line-height:
150%'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify;text-indent:26.95pt;line-height:
150%'>2. Система массового обслуживания состоит из двух обслуживающих аппаратов
(ОА1 и ОА2) и двух очередей заявок. Всего в системе обращается 100 заявок (рис.
4).</p>

<p class=MsoNormal style='text-indent:26.95pt;line-height:150%'><span
style='font-family:Arial'>                                       <b>Т1              
1-Р                           Т2</b></span></p>

<p class=MsoNormal style='text-indent:26.95pt;line-height:150%'>

<table cellpadding=0 cellspacing=0 align=left>
 <tr>
  <td width=11 height=11></td>
 </tr>
 <tr>
  <td></td>
  <td><img width=555 height=53 src="stage5.files/image009.gif"></td>
 </tr>
</table>

 &nbsp;</p>

<p class=MsoNormal style='text-indent:26.95pt;line-height:150%'>&nbsp;</p>

<p class=MsoNormal style='text-indent:26.95pt;line-height:150%'>&nbsp;</p>

<br clear=ALL>

<p class=MsoNormal style='text-indent:26.95pt;line-height:150%'>                                                      
Р</p>

<h2>Рис. 4</h2>

<p class=MsoNormal style='text-align:justify;text-indent:26.95pt;line-height:
150%'>Заявки поступают в &quot;хвост&quot; каждой очереди; в ОА заявки
поступают из &quot;головы&quot; очереди по одной и обслуживаются по случайному
закону за интервалы времени <b>Т1</b> и <b>Т2,</b> равномерно распределенные от
<b>0 до 6</b> и от <b>1 до 8</b> единиц времени (е.в.) соответственно. (все
времена – вещественного типа)  Каждая заявка после ОА1 с вероятностью <b>Р=0.7</b>
вновь поступает в &quot;хвост&quot; первой очереди, совершая новый цикл
обслуживания, а с вероятностью <b>1</b>–<b>Р</b> входит во вторую очередь. В
начале процесса все заявки находятся в первой очереди.</p>

<div style='border:none;border-bottom:solid windowtext 1.0pt;padding:0cm 0cm 1.0pt 0cm'>

<p class=MsoNormal style='text-align:justify;text-indent:26.95pt;line-height:
150%;border:none;padding:0cm'>Требуется смоделировать процесс обслуживания до
выхода из ОА2 первых обслуженных первой партии из 1000 заявок, выдавая после
обслуживания в ОА2 каждых 100 заявок информацию о текущей и средней длине
каждой очереди, количестве вошедших и вышедших заявок и среднем времени
пребывания заявок в очереди, а в конце процесса – общее время моделирования,
время простоя аппаратов, количество заявок, прошедших через ОА1.</p>

<p class=MsoNormal style='text-align:justify;text-indent:26.95pt;line-height:
150%;border:none;padding:0cm'>По требованию пользователя выдавать на экран
адреса элементов очереди при удалении и добавлении элементов. Проследить,
возникает ли при этом фрагментация памяти.</p>

</div>

<p class=MsoBodyTextIndent style='text-align:justify;line-height:150%'><span
style='font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoBodyTextIndent style='margin-left:36.0pt;text-align:justify;
text-indent:-18.0pt;line-height:150%'><span style='font-family:"Times New Roman"'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"Times New Roman"'>Система массового обслуживания состоит из
обслуживающего аппарата (ОА)и очереди заявок (рис 5).</span></p>

<p class=MsoBodyTextIndent style='text-align:justify;text-indent:0cm;
line-height:150%'><span style='font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:26.95pt;line-height:150%'><span
style='position:relative;z-index:23'><span style='left:0px;position:absolute;
left:11px;top:-1px;width:386px;height:86px'><img width=386 height=86
src="stage5.files/image010.gif"></span></span>   <b><span lang=EN-US>T</span>1</b>                                                   
<b><span lang=EN-US>T</span>2           1-Р</b></p>

<p class=MsoNormal style='text-indent:26.95pt;line-height:150%'>  </p>

<p class=MsoNormal style='text-indent:26.95pt;line-height:150%'>                                          
<b>Р</b></p>

<h2 style='margin:0cm;margin-bottom:.0001pt;line-height:normal'>&nbsp;</h2>

<h2 style='margin:0cm;margin-bottom:.0001pt;line-height:normal'>Рис. 5</h2>

<p class=MsoNormal style='text-align:justify;text-indent:26.95pt;line-height:
150%'>Заявки  поступают в &quot;хвост&quot; очереди по случайному закону с интервалом
времени <b>Т1,</b> равномерно распределенным от <b>0 до 6</b> единиц времени
(е.в.). В ОА заявки поступают из &quot;головы&quot; очереди по одной и обслуживаются
также равновероятно за время <b>Т2</b> от <b>0 до 1</b> е.в., Каждая заявка
после ОА с вероятностью <b>Р=0.8</b>  вновь поступает в &quot;хвост&quot;
очереди, совершая новый цикл обслуживания, а с вероятностью <b>1</b>–<b>Р</b>
покидает систему. (все времена – вещественного типа) В начале процесса в
системе заявок нет.</p>

<div style='border:none;border-bottom:solid windowtext 1.0pt;padding:0cm 0cm 1.0pt 0cm'>

<p class=MsoNormal style='text-align:justify;text-indent:26.95pt;line-height:
150%;border:none;padding:0cm'>Требуется смоделировать процесс обслуживания
первой партии из 1000 заявок, выдавая после обслуживания каждых 100 заявок 
информацию о текущей и средней длине очереди, количестве вошедших и вышедших
заявок и среднем времени пребывания заявки в очереди, а в конце процесса –
общее время моделирования, время простоя аппарата, количество срабатываний
аппарата. По требованию пользователя выдать на экран адреса элементов очереди
при удалении и добавлении элементов. Проследить, возникает ли при этом
фрагментация памяти.</p>

</div>

<p class=MsoBodyTextIndent style='line-height:150%'><span style='font-family:
"Times New Roman"'>&nbsp;</span></p>

<p class=MsoBodyTextIndent style='line-height:150%'><span style='font-family:
"Times New Roman"'>4. Система массового обслуживания состоит из обслуживающего
аппарата (ОА) и двух очередей заявок двух типов (рис. 6).</span></p>

<p class=MsoNormal style='line-height:150%'><span style='position:absolute;
z-index:3;margin-left:-1px;margin-top:24px;width:495px;height:86px'><img
width=495 height=86 src="stage5.files/image011.gif"></span><span
style='font-family:Arial'>   </span><b><span lang=EN-US style='font-family:
Arial'>T</span></b><b><span style='font-family:Arial'>1    </span></b><span
style='font-family:Arial'>                                                                </span><b><span
lang=EN-US style='font-family:Arial'>T</span></b><b><span style='font-family:
Arial'>3</span></b><span style='font-family:Arial'>           </span></p>

<p class=MsoNormal style='line-height:150%'><span style='font-family:Arial'>  </span></p>

<p class=MsoNormal style='line-height:150%'><span style='font-family:Arial'>   <b>Т2                                                                                                                
</b></span></p>

<p class=MsoNormal style='line-height:150%'><b><span style='font-family:Arial'>&nbsp;</span></b></p>

<p class=MsoNormal style='line-height:150%'><span style='font-family:Arial'>          
                                                               <b>Т4                  
</b></span></p>

<h2 style='margin:0cm;margin-bottom:.0001pt;line-height:normal'>Рис. 6</h2>

<p class=MsoNormal style='text-align:justify;text-indent:26.95pt;line-height:
150%'>Заявки первого и второго типов поступают в &quot;хвосты&quot; своих
очередей по случайному закону с интервалами времени <b>Т1</b> и <b>Т2</b>,
равномерно распределенными от <b>1 до 5</b>  и от <b>0 до 3</b> единиц времени
(е.в.) соответственно. В ОА заявки поступают из &quot;головы&quot; очереди по
одной и обслуживаются также равновероятно за времена <b>Т3</b> и <b>Т4</b>,
распределенные от <b>0 до 4</b> е.в. и от <b>0 до 1</b> е.в. соответственно,
после чего покидают систему. (все времена – вещественного типа)  В начале
процесса в системе заявок нет.</p>

<p class=MsoNormal style='text-align:justify;text-indent:26.95pt;line-height:
150%'>Заявка второго типа может войти в ОА, если в системе нет заявок первого
типа. Если в момент обслуживания заявки второго типа в пустую очередь входит
заявка первого типа, то она ждет первого освобождения ОА и далее поступает на
обслуживание (система с относительным приоритетом ).</p>

<div style='border:none;border-bottom:solid windowtext 1.0pt;padding:0cm 0cm 4.0pt 0cm'>

<p class=MsoNormal style='text-align:justify;text-indent:26.95pt;line-height:
150%;border:none;padding:0cm'>Требуется смоделировать процесс обслуживания
первой партии из 1000 заявок <b>первого типа</b>, выдавая после обслуживания
каждых 100 заявок первого типа  информацию о текущей и средней длине каждой очереди,
количестве вошедших и вышедших заявок и среднем времени пребывания заявок в
очереди, а в конце процесса – общее время моделирования, время простоя
аппарата, количество вошедших в систему и вышедших из нее заявок первого типа и
количество обращений заявок второго типа. По требованию пользователя выдать на
экран адреса элементов очереди при удалении и добавлении элементов. Проследить,
возникает ли при этом фрагментация памяти.</p>

</div>

</div>

</body>

</html>
